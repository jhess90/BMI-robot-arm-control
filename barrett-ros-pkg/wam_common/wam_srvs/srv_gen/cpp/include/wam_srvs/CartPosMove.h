/* Auto-generated by genmsg_cpp for file /home/robot/fuerte_workspace/sandbox/barrett-ros-pkg/wam_common/wam_srvs/srv/CartPosMove.srv */
#ifndef WAM_SRVS_SERVICE_CARTPOSMOVE_H
#define WAM_SRVS_SERVICE_CARTPOSMOVE_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace wam_srvs
{
template <class ContainerAllocator>
struct CartPosMoveRequest_ {
  typedef CartPosMoveRequest_<ContainerAllocator> Type;

  CartPosMoveRequest_()
  : position()
  {
    position.assign(0.0);
  }

  CartPosMoveRequest_(const ContainerAllocator& _alloc)
  : position()
  {
    position.assign(0.0);
  }

  typedef boost::array<float, 3>  _position_type;
  boost::array<float, 3>  position;


  typedef boost::shared_ptr< ::wam_srvs::CartPosMoveRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::wam_srvs::CartPosMoveRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct CartPosMoveRequest
typedef  ::wam_srvs::CartPosMoveRequest_<std::allocator<void> > CartPosMoveRequest;

typedef boost::shared_ptr< ::wam_srvs::CartPosMoveRequest> CartPosMoveRequestPtr;
typedef boost::shared_ptr< ::wam_srvs::CartPosMoveRequest const> CartPosMoveRequestConstPtr;


template <class ContainerAllocator>
struct CartPosMoveResponse_ {
  typedef CartPosMoveResponse_<ContainerAllocator> Type;

  CartPosMoveResponse_()
  {
  }

  CartPosMoveResponse_(const ContainerAllocator& _alloc)
  {
  }


  typedef boost::shared_ptr< ::wam_srvs::CartPosMoveResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::wam_srvs::CartPosMoveResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct CartPosMoveResponse
typedef  ::wam_srvs::CartPosMoveResponse_<std::allocator<void> > CartPosMoveResponse;

typedef boost::shared_ptr< ::wam_srvs::CartPosMoveResponse> CartPosMoveResponsePtr;
typedef boost::shared_ptr< ::wam_srvs::CartPosMoveResponse const> CartPosMoveResponseConstPtr;

struct CartPosMove
{

typedef CartPosMoveRequest Request;
typedef CartPosMoveResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct CartPosMove
} // namespace wam_srvs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::wam_srvs::CartPosMoveRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::wam_srvs::CartPosMoveRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::wam_srvs::CartPosMoveRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "993d3a0cca92114d34b338aeb1007ee4";
  }

  static const char* value(const  ::wam_srvs::CartPosMoveRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x993d3a0cca92114dULL;
  static const uint64_t static_value2 = 0x34b338aeb1007ee4ULL;
};

template<class ContainerAllocator>
struct DataType< ::wam_srvs::CartPosMoveRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "wam_srvs/CartPosMoveRequest";
  }

  static const char* value(const  ::wam_srvs::CartPosMoveRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::wam_srvs::CartPosMoveRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "float32[3] position\n\
\n\
";
  }

  static const char* value(const  ::wam_srvs::CartPosMoveRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::wam_srvs::CartPosMoveRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::wam_srvs::CartPosMoveResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::wam_srvs::CartPosMoveResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::wam_srvs::CartPosMoveResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::wam_srvs::CartPosMoveResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::wam_srvs::CartPosMoveResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "wam_srvs/CartPosMoveResponse";
  }

  static const char* value(const  ::wam_srvs::CartPosMoveResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::wam_srvs::CartPosMoveResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
";
  }

  static const char* value(const  ::wam_srvs::CartPosMoveResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::wam_srvs::CartPosMoveResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::wam_srvs::CartPosMoveRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.position);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct CartPosMoveRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::wam_srvs::CartPosMoveResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct CartPosMoveResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<wam_srvs::CartPosMove> {
  static const char* value() 
  {
    return "993d3a0cca92114d34b338aeb1007ee4";
  }

  static const char* value(const wam_srvs::CartPosMove&) { return value(); } 
};

template<>
struct DataType<wam_srvs::CartPosMove> {
  static const char* value() 
  {
    return "wam_srvs/CartPosMove";
  }

  static const char* value(const wam_srvs::CartPosMove&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<wam_srvs::CartPosMoveRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "993d3a0cca92114d34b338aeb1007ee4";
  }

  static const char* value(const wam_srvs::CartPosMoveRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<wam_srvs::CartPosMoveRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "wam_srvs/CartPosMove";
  }

  static const char* value(const wam_srvs::CartPosMoveRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<wam_srvs::CartPosMoveResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "993d3a0cca92114d34b338aeb1007ee4";
  }

  static const char* value(const wam_srvs::CartPosMoveResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<wam_srvs::CartPosMoveResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "wam_srvs/CartPosMove";
  }

  static const char* value(const wam_srvs::CartPosMoveResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // WAM_SRVS_SERVICE_CARTPOSMOVE_H

